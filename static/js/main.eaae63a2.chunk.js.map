{"version":3,"sources":["App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","App","useAuthState","user","className","SignOut","ChatRoom","SignIn","Fab","onClick","provider","GoogleAuthProvider","signInWithPopup","color","variant","currentUser","Button","signOut","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","map","msg","ChatMessage","message","id","onSubmit","value","onChange","target","type","props","messageClass","src","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAiBAA,IAASC,cARY,CACnBC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,8CAIT,IAAMC,EAAOR,IAASQ,OAChBC,EAAYT,IAASS,YAEZ,SAASC,IAAO,IAAD,EACbC,YAAaH,GAArBI,EADqB,oBAE5B,OACE,sBAAKC,UAAU,MAAf,UACE,iCAAQ,cAACC,EAAD,MACR,kCACGF,EAAO,cAACG,EAAD,IAAe,cAACC,EAAD,SAM/B,SAASA,IAKP,OACE,mCACE,cAACC,EAAA,EAAD,CAAKC,QANgB,WACvB,IAAMC,EAAW,IAAInB,IAASQ,KAAKY,mBACnCZ,EAAKa,gBAAgBF,IAIaG,MAAM,UAAUC,QAAQ,WAAxD,mCAKN,SAAST,IACP,OAAON,EAAKgB,aACV,cAACC,EAAA,EAAD,CAAQP,QAAS,kBAAIV,EAAKkB,WAAWH,QAAQ,WAAWD,MAAM,UAA9D,sBAIJ,SAASP,IACP,IAAMY,EAAclB,EAAUmB,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,IAFnC,EAGCC,YAAkBH,EAAO,CAACI,QAAS,OAA/CC,EAHW,sBAIgBC,mBAAS,IAJzB,mBAIXC,EAJW,KAIAC,EAJA,KAKZC,EAAW,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,6DAClBD,EAAEE,iBADgB,EAEQjC,EAAKgB,YAAvBkB,EAFU,EAEVA,IAAKC,EAFK,EAELA,SAFK,SAGZhB,EAAYiB,IAAI,CACpBC,KAAMT,EACNU,UAAW9C,IAASS,UAAUsC,WAAWC,kBACzCN,MACAC,aAPgB,OASlBN,EAAa,IATK,2CAAH,sDAWjB,OACE,qCACA,8BACGH,GAAYA,EAASe,KAAI,SAAAC,GAAG,OAAI,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,SAEzD,uBAAMC,SAAUhB,EAAhB,UACE,uBAAOiB,MAAOnB,EAAWoB,SAAU,SAACjB,GAAD,OAAOF,EAAaE,EAAEkB,OAAOF,UAChE,cAAC9B,EAAA,EAAD,CAAQiC,KAAK,SAASnC,QAAQ,WAAWD,MAAM,UAA/C,wBAMN,SAAS6B,EAAYQ,GAAQ,IAAD,EACMA,EAAMP,QAA9BP,EADkB,EAClBA,KAAMH,EADY,EACZA,IAAKC,EADO,EACPA,SACbiB,EAAgBlB,IAAQlC,EAAKgB,YAAYkB,IAAO,OAAS,WAC/D,OACE,sBAAK7B,UAAS,kBAAa+C,GAA3B,UACI,qBAAKC,IAAKlB,EAAUmB,IAAI,0DACxB,4BAAIjB,OClFZkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.eaae63a2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { Fab, Button } from '@material-ui/core';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBOgLPwBnSvo_QWS1A9Vy5EX--HNqqzYI4\",\n  authDomain: \"superchat-f5342.firebaseapp.com\",\n  projectId: \"superchat-f5342\",\n  storageBucket: \"superchat-f5342.appspot.com\",\n  messagingSenderId: \"223158000999\",\n  appId: \"1:223158000999:web:a59ed5a09dee36ebece3c2\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nexport default function App() {\n  const [user] = useAuthState(auth);\n  return (\n    <div className=\"App\">\n      <header><SignOut /></header>\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n    </div>\n  );\n}\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n  return(\n    <>\n      <Fab onClick={signInWithGoogle} color='primary' variant='extended'>Sign in with Google</Fab>\n    </>\n  )\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <Button onClick={()=>auth.signOut()} variant='outlined' color='primary'>Sign Out</Button>\n  )\n}\n\nfunction ChatRoom() {\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n  const [messages] = useCollectionData(query, {idField: 'id'});\n  const [formValue, setFormValue] = useState('');\n  const sendMessage = async(e) => {\n    e.preventDefault();\n    const { uid, photoURL } = auth.currentUser;\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    });\n    setFormValue('');\n  }\n  return (\n    <>\n    <div>\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg}/>)}\n    </div>\n    <form onSubmit={sendMessage}>\n      <input value={formValue} onChange={(e) => setFormValue(e.target.value)}></input>\n      <Button type=\"submit\" variant='outlined' color='primary'>Send</Button>\n    </form>\n    </>\n  )\n}\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n  const messageClass = (uid === auth.currentUser.uid) ? 'sent' : 'received';\n  return (\n    <div className={`message ${messageClass}`}>\n        <img src={photoURL} alt='https://api.adorable.io/avatars/23/abott@adorable.png' />\n        <p>{text}</p>\n    </div>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}