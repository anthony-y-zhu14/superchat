{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","SignIn","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","map","msg","ChatMessage","message","id","onSubmit","value","onChange","target","type","props","messageClass","className","src","alt","App","useAuthState","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAgBAA,IAASC,cARY,CACnBC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,8CAIT,IAAMC,EAAOR,IAASQ,OAChBC,EAAYT,IAASS,YAc3B,SAASC,IAKP,OACE,qCACA,wBAAQC,QANe,WACvB,IAAMC,EAAW,IAAIZ,IAASQ,KAAKK,mBACnCL,EAAKM,gBAAgBF,IAIrB,iCACA,2GAKJ,SAASG,IACP,OAAOP,EAAKQ,aACV,wBAAQL,QAAS,kBAAIH,EAAKS,WAA1B,sBAIJ,SAASC,IACP,IAAMC,EAAcV,EAAUW,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,IAFnC,EAGCC,YAAkBH,EAAO,CAACI,QAAS,OAA/CC,EAHW,sBAIgBC,mBAAS,IAJzB,mBAIXC,EAJW,KAIAC,EAJA,KAKZC,EAAW,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,6DAClBD,EAAEE,iBADgB,EAEQzB,EAAKQ,YAAvBkB,EAFU,EAEVA,IAAKC,EAFK,EAELA,SAFK,SAGZhB,EAAYiB,IAAI,CACpBC,KAAMT,EACNU,UAAWtC,IAASS,UAAU8B,WAAWC,kBACzCN,MACAC,aAPgB,OASlBN,EAAa,IATK,2CAAH,sDAWjB,OACE,qCACA,8BACGH,GAAYA,EAASe,KAAI,SAAAC,GAAG,OAAI,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,SAEzD,uBAAMC,SAAUhB,EAAhB,UACE,uBAAOiB,MAAOnB,EAAWoB,SAAU,SAACjB,GAAD,OAAOF,EAAaE,EAAEkB,OAAOF,UAChE,wBAAQG,KAAK,SAAb,wBAMN,SAASP,EAAYQ,GAAQ,IAAD,EACMA,EAAMP,QAA9BP,EADkB,EAClBA,KAAMH,EADY,EACZA,IAAKC,EADO,EACPA,SACbiB,EAAgBlB,IAAQ1B,EAAKQ,YAAYkB,IAAO,OAAS,WAC/D,OACE,sBAAKmB,UAAS,kBAAaD,GAA3B,UACI,qBAAKE,IAAKnB,EAAUoB,IAAI,0DACxB,4BAAIlB,OAKGmB,MAvEf,WAAgB,IAAD,EACEC,YAAajD,GAArBkD,EADM,oBAEb,OACE,sBAAKL,UAAU,MAAf,UACE,iCAAQ,cAACtC,EAAD,MACR,kCACG2C,EAAO,cAACxC,EAAD,IAAe,cAACR,EAAD,UCfhBiD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cfc5ebe8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBOgLPwBnSvo_QWS1A9Vy5EX--HNqqzYI4\",\n  authDomain: \"superchat-f5342.firebaseapp.com\",\n  projectId: \"superchat-f5342\",\n  storageBucket: \"superchat-f5342.appspot.com\",\n  messagingSenderId: \"223158000999\",\n  appId: \"1:223158000999:web:a59ed5a09dee36ebece3c2\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction App() {\n  const [user] = useAuthState(auth);\n  return (\n    <div className=\"App\">\n      <header><SignOut /></header>\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n    </div>\n  );\n}\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n  return(\n    <>\n    <button onClick={signInWithGoogle}>Sign in with Google</button>\n    <p>Do not violate the community guidelines or you will be banned for life!</p>\n    </>\n  )\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button onClick={()=>auth.signOut()}>Sign Out</button>\n  )\n}\n\nfunction ChatRoom() {\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n  const [messages] = useCollectionData(query, {idField: 'id'});\n  const [formValue, setFormValue] = useState('');\n  const sendMessage = async(e) => {\n    e.preventDefault();\n    const { uid, photoURL } = auth.currentUser;\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    });\n    setFormValue('');\n  }\n  return (\n    <>\n    <div>\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg}/>)}\n    </div>\n    <form onSubmit={sendMessage}>\n      <input value={formValue} onChange={(e) => setFormValue(e.target.value)}></input>\n      <button type=\"submit\">Send</button>\n    </form>\n    </>\n  )\n}\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n  const messageClass = (uid === auth.currentUser.uid) ? 'sent' : 'received';\n  return (\n    <div className={`message ${messageClass}`}>\n        <img src={photoURL} alt='https://api.adorable.io/avatars/23/abott@adorable.png' />\n        <p>{text}</p>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}